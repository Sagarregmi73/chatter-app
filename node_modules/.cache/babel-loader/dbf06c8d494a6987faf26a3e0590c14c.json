{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\desktop\\\\challenge\\\\react-coding-challenges\\\\chatter\\\\src\\\\components\\\\Messages\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport useSound from 'use-sound';\nimport config from '../../../config';\nimport LatestMessagesContext from '../../../contexts/LatestMessages/LatestMessages';\nimport INITIAL_BOTTY_MESSAGE from '../../../common/constants/initialBottyMessage';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Message from './Message';\nimport TypingMessage from './TypingMessage';\nimport '../styles/_messages.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ME = 'me';\nconst BOTTY = 'bot';\nconst socket = io(config.BOT_SERVER_ENDPOINT, {\n  transports: ['websocket', 'polling', 'flashsocket']\n});\nconst INITIAL_MESSAGE = {\n  message: INITIAL_BOTTY_MESSAGE,\n  id: Date.now(),\n  user: BOTTY\n};\n\nfunction scrollToBottom() {\n  const list = document.getElementById('message-list');\n  list.scrollTo({\n    top: list.scrollHeight,\n    behavior: 'smooth'\n  });\n}\n\nfunction Messages() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([INITIAL_MESSAGE]);\n  const [botTyping, setBotTyping] = useState(false);\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\n  const {\n    setLatestMessage\n  } = useContext(LatestMessagesContext);\n  useEffect(() => {\n    socket.off('bot-message');\n    socket.on('bot-message', message => {\n      setBotTyping(false);\n      setMessages([...messages, {\n        message,\n        user: BOTTY,\n        id: Date.now()\n      }]);\n      setLatestMessage(BOTTY, message);\n      playReceive();\n      scrollToBottom();\n    });\n  }, [messages]);\n  useEffect(() => {\n    document.getElementById('user-message-input').focus();\n    socket.on('bot-typing', () => {\n      setBotTyping(true);\n      scrollToBottom();\n    });\n  }, []);\n  const sendMessage = useCallback(() => {\n    if (!message) {\n      return;\n    }\n\n    setMessages([...messages, {\n      message,\n      user: ME,\n      id: Date.now()\n    }]);\n    playSend();\n    scrollToBottom();\n    socket.emit('user-message', message);\n    setMessage('');\n    document.getElementById('user-message-input').value = '';\n  }, [messages, message]);\n\n  const onChangeMessage = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setMessage(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages__list\",\n      id: \"message-list\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        nextMessage: messages[index + 1],\n        botTyping: botTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)), botTyping ? /*#__PURE__*/_jsxDEV(TypingMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 22\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      message: message,\n      sendMessage: sendMessage,\n      onChangeMessage: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messages, \"00K85+1lyAjnDCJjsLNzRvhrEQE=\", false, function () {\n  return [useSound, useSound];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/DELL/desktop/challenge/react-coding-challenges/chatter/src/components/Messages/components/Messages.js"],"names":["React","useEffect","useContext","useState","useCallback","io","useSound","config","LatestMessagesContext","INITIAL_BOTTY_MESSAGE","Header","Footer","Message","TypingMessage","ME","BOTTY","socket","BOT_SERVER_ENDPOINT","transports","INITIAL_MESSAGE","message","id","Date","now","user","scrollToBottom","list","document","getElementById","scrollTo","top","scrollHeight","behavior","Messages","setMessage","messages","setMessages","botTyping","setBotTyping","playSend","SEND_AUDIO_URL","playReceive","RECEIVE_AUDIO_URL","setLatestMessage","off","on","focus","sendMessage","emit","value","onChangeMessage","target","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState, useCallback } from 'react';\r\nimport io from 'socket.io-client';\r\nimport useSound from 'use-sound';\r\nimport config from '../../../config';\r\nimport LatestMessagesContext from '../../../contexts/LatestMessages/LatestMessages';\r\nimport INITIAL_BOTTY_MESSAGE from '../../../common/constants/initialBottyMessage';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Message from './Message';\r\nimport TypingMessage from './TypingMessage';\r\nimport '../styles/_messages.scss';\r\n\r\nconst ME = 'me';\r\nconst BOTTY = 'bot';\r\n\r\nconst socket = io(\r\n  config.BOT_SERVER_ENDPOINT,\r\n  { transports: ['websocket', 'polling', 'flashsocket'] }\r\n);\r\n\r\n\r\nconst INITIAL_MESSAGE = {\r\n  message: INITIAL_BOTTY_MESSAGE,\r\n  id: Date.now(),\r\n  user: BOTTY\r\n};\r\n\r\n\r\nfunction scrollToBottom() {\r\n  const list = document.getElementById('message-list');\r\n\r\n  list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\r\n}\r\n\r\nfunction Messages() {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([INITIAL_MESSAGE]);\r\n  const [botTyping, setBotTyping] = useState(false);\r\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\r\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\r\n  const { setLatestMessage } = useContext(LatestMessagesContext);\r\n\r\n  useEffect(() => {\r\n    socket.off('bot-message');\r\n    socket.on('bot-message', (message) => {\r\n      setBotTyping(false);\r\n\r\n      setMessages([...messages, { message, user: BOTTY, id: Date.now() }]);\r\n\r\n      setLatestMessage(BOTTY, message);\r\n\r\n      playReceive();\r\n\r\n      scrollToBottom();\r\n    });\r\n\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    document.getElementById('user-message-input').focus()\r\n\r\n    socket.on('bot-typing', () => {\r\n      setBotTyping(true);\r\n\r\n      scrollToBottom();\r\n    });\r\n  }, []);\r\n\r\n  const sendMessage = useCallback(() => {\r\n    if (!message) { return; }\r\n\r\n    setMessages([...messages, { message, user: ME, id: Date.now() }]);\r\n\r\n    playSend();\r\n\r\n    scrollToBottom();\r\n\r\n    socket.emit('user-message', message);\r\n\r\n    setMessage('');\r\n\r\n    document.getElementById('user-message-input').value = '';\r\n  }, [messages, message]);\r\n\r\n  const onChangeMessage = ({ target: { value }}) => {\r\n    setMessage(value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      <Header />\r\n      <div className=\"messages__list\" id=\"message-list\">\r\n        {messages.map((message, index) => (\r\n          <Message message={message} nextMessage={messages[index + 1]} botTyping={botTyping} />\r\n        ))}\r\n        {botTyping ? <TypingMessage /> : null}\r\n      </div>\r\n      <Footer message={message} sendMessage={sendMessage} onChangeMessage={onChangeMessage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}