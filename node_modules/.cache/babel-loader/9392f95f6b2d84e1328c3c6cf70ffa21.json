{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\desktop\\\\challenge\\\\react-coding-challenges\\\\chatter\\\\src\\\\components\\\\Messages\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport io from 'socket.io-client';\nimport useSound from 'use-sound';\nimport config from '../../../config';\nimport LatestMessagesContext from '../../../contexts/LatestMessages/LatestMessages';\nimport TypingMessage from './TypingMessage';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Message from './Message';\nimport '../styles/_messages.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(config.BOT_SERVER_ENDPOINT, {\n  transports: ['websocket', 'polling', 'flashsocket']\n});\nsocket.on('bot-message', message => {\n  // do something\n  console.log(\"got the message\");\n  socket.sendEndMessage(\"hello\");\n});\n\nfunction Messages() {\n  _s();\n\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\n  const {\n    setLatestMessage\n  } = useContext(LatestMessagesContext);\n  const [message, setMessage] = useState(\"hello im bot\");\n\n  const onChangeMessage = () => {\n    console.log(\"hello im bot\");\n    setMessage(\"hi\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages__list\",\n      id: \"message-list\",\n      children: [/*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TypingMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      message: message,\n      sendMessage: sendMessage,\n      onChangeMessage: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messages, \"cli0QVzNY0I2Y9hN9TMYQ2AD4xw=\", false, function () {\n  return [useSound, useSound];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/DELL/desktop/challenge/react-coding-challenges/chatter/src/components/Messages/components/Messages.js"],"names":["React","useContext","useState","io","useSound","config","LatestMessagesContext","TypingMessage","Header","Footer","Message","socket","BOT_SERVER_ENDPOINT","transports","on","message","console","log","sendEndMessage","Messages","playSend","SEND_AUDIO_URL","playReceive","RECEIVE_AUDIO_URL","setLatestMessage","setMessage","onChangeMessage","sendMessage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,qBAAP,MAAkC,iDAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,0BAAP;;AAEA,MAAMC,MAAM,GAAGR,EAAE,CACfE,MAAM,CAACO,mBADQ,EAEf;AAAEC,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd,EAAyB,aAAzB;AAAd,CAFe,CAAjB;AAKAF,MAAM,CAACG,EAAP,CAAU,aAAV,EAA0BC,OAAD,IAAa;AACpC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACCN,EAAAA,MAAM,CAACO,cAAP,CAAsB,OAAtB;AACF,CAJD;;AAKA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,IAAahB,QAAQ,CAACC,MAAM,CAACgB,cAAR,CAA3B;AACA,QAAM,CAACC,WAAD,IAAgBlB,QAAQ,CAACC,MAAM,CAACkB,iBAAR,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAuBvB,UAAU,CAACK,qBAAD,CAAvC;AACF,QAAM,CAACS,OAAD,EAASU,UAAT,IAAqBvB,QAAQ,CAAC,cAAD,CAAnC;;AAEE,QAAMwB,eAAe,GAAC,MAAI;AACtBV,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,EAAE,EAAC,cAAnC;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,OAAjB;AAA0B,MAAA,WAAW,EAAEY,WAAvC;AAAoD,MAAA,eAAe,EAAED;AAArE;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArBQP,Q;UACYf,Q,EACGA,Q;;;KAFfe,Q;AAuBT,eAAeA,QAAf","sourcesContent":["import React, { useContext ,useState} from 'react';\r\nimport io from 'socket.io-client';\r\nimport useSound from 'use-sound';\r\nimport config from '../../../config';\r\nimport LatestMessagesContext from '../../../contexts/LatestMessages/LatestMessages';\r\nimport TypingMessage from './TypingMessage';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Message from './Message';\r\nimport '../styles/_messages.scss';\r\n\r\nconst socket = io(\r\n  config.BOT_SERVER_ENDPOINT,\r\n  { transports: ['websocket', 'polling', 'flashsocket'] }\r\n);\r\n\r\nsocket.on('bot-message', (message) => {\r\n  // do something\r\n  console.log(\"got the message\");\r\n   socket.sendEndMessage(\"hello\");\r\n});\r\nfunction Messages() {\r\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\r\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\r\n  const { setLatestMessage } = useContext(LatestMessagesContext);\r\nconst [message,setMessage]=useState(\"hello im bot\");\r\n\r\n  const onChangeMessage=()=>{\r\n      console.log(\"hello im bot\");\r\n      setMessage(\"hi\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      <Header />\r\n      <div className=\"messages__list\" id=\"message-list\">\r\n        <Message />\r\n        <TypingMessage />\r\n      </div>\r\n      <Footer message={message} sendMessage={sendMessage} onChangeMessage={onChangeMessage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n"]},"metadata":{},"sourceType":"module"}